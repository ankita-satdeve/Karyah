Act as a root view controller.

Injects NavigationManager into the environment.

It passes @EnvironmentObject so that all views can access navigation functions.
@EnvironmentObject Makes It Accessible Globally

All views can access NavigationManager without passing data manually.


////////
NavigationManager.swift - Stores navigation logic (navigate, back, root).
ContentView.swift - Defines NavigationStack and provides NavigationManager.

HomeView.swift, etc. - Uses NavigationManager to navigate.



///////

üõ† Example: ContentView.swift with NavigationManager
üìå NavigationManager.swift (Handles Navigation)

First, create a NavigationManager.swift file:

import SwiftUI

class NavigationManager: ObservableObject {
    @Published var path: [Screen] = []
    
    func navigate(to screen: Screen) {
        path.append(screen)
    }
    
    func goBack() {
        if !path.isEmpty {
            path.removeLast()
        }
    }
    
    func goToRoot() {
        path.removeAll()
    }
}

enum Screen: Hashable {
    case home
    case profile
    case settings
}

üìå ContentView.swift (Entry Point with Navigation Stack)

Now, ContentView.swift sets up navigation using NavigationManager:

import SwiftUI

struct ContentView: View {
    @StateObject var navigationManager = NavigationManager() // Initialize navigation manager
    
    var body: some View {
        NavigationStack(path: $navigationManager.path) {
            HomeView()
                .navigationDestination(for: Screen.self) { screen in
                    switch screen {
                    case .home:
                        HomeView()
                    case .profile:
                        ProfileView()
                    case .settings:
                        SettingsView()
                    }
                }
        }
        .environmentObject(navigationManager) // Pass navigation manager to all views
    }
}

üìå Example Screens (HomeView.swift)

Modify HomeView.swift to use NavigationManager:

import SwiftUI

struct HomeView: View {
    @EnvironmentObject var navigationManager: NavigationManager
    
    var body: some View {
        VStack {
            Text("üè† Home Screen")
                .font(.largeTitle)
            
            Button("Go to Profile") {
                navigationManager.navigate(to: .profile)
            }
            .buttonStyle(.borderedProminent)
            
            Button("Go to Settings") {
                navigationManager.navigate(to: .settings)
            }
            .buttonStyle(.borderedProminent)
        }
        .padding()
    }
}
